#steps:
#  # Step 1: gcloud 이미지에서 비밀을 가져옴
#  - name: 'gcr.io/cloud-builders/gcloud'
#    entrypoint: 'bash'
#    args:
#      - '-c'
#      - |
#        echo "Starting Secret Manager access..."
#        gcloud secrets versions access latest --secret="service-account-key" > /workspace/service-account-key.json
#        echo "Secret Manager access completed."
#
#  # Step 2: Python 환경에서 작업 수행
#  - name: 'python:3.11'
#    entrypoint: 'bash'
#    args:
#      - '-c'
#      - |
#        echo "Creating virtual environment..."
#        python3 -m venv venv
#        . venv/bin/activate
#
#        echo "Installing dependencies..."
#        pip install -r requirements.txt || exit 1
#
#        echo "Collecting static files..."
#        python manage.py collectstatic --noinput || exit 1
#
#        echo "Applying migrations..."
#        python manage.py migrate || exit 1
#
#  # Step 3: GCP에 배포
#  - name: 'gcr.io/cloud-builders/gcloud'
#    args: ['app', 'deploy']
#
#secrets:
#- secretEnv:
#    GOOGLE_CLOUD_CREDENTIALS: service-account-key
#
#service_account: 535442247184-compute@developer.gserviceaccount.com
#
#options:
#  logging: CLOUD_LOGGING_ONLY
#  machineType: 'E2_MEDIUM'


# cloud run에서 배포
steps:
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/django-app', '.']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/django-app']

  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['run', 'deploy', 'django-app', '--image', 'gcr.io/$PROJECT_ID/django-app', '--platform', 'managed']

images:
  - 'gcr.io/$PROJECT_ID/django-app'